/*
Maximum AND Value 
Given an array arr[] of N positive elements. The task is to find the Maximum AND Value generated by any pair(arri, arrj) from the array such that i != j.
Note: AND is bitwise '&' operator.
Example 1:
Input: 
N = 4
arr[] = {4, 8, 12, 16}
Output: 8
Explanation:
Pair (8,12) has the Maximum AND Value 8.
Example 2:
Input:
N = 4
arr[] = {4, 8, 16, 2}
Output: 0
Explanation: Any two pairs of the array has 
Maximum AND Value 0.
Your Task: 
You don't need to read input or print anything. Your task is to complete the function maxAND() which takes the aray elements and N (size of the array) as input parameters and returns the maximum AND value generated by any pair in the array. 
Expected Time Complexity: O(N * log M), where M is the maximum element of the array.
Expected Auxiliary Space: O(1).
Constraints:
1 <= N <= 105
1 <= arr[i] <= 105
*/

#include<bits/stdc++.h>
using namespace std;
class Solution
{
    public:
    // Function for finding maximum AND value.
    int maxAND (int a[], int n)
    {
        int res=0;
        for(int i=31;i>=0;i--)
        {
            int c=0;
            int pattern=res|(1<<i);
            for(int j=0;j<n;j++)
            {
                if((a[j]&pattern)==pattern)
                c++;
            }
            if(c>=2)
            res=pattern;
        }
        return res;
    }
};
int main()
{
    int t;
    cin>>t;//testcases
    while(t--)
    {
        int n;
        cin>>n;//input n
        int arr[n+5],i;
        
        //inserting elements
        for(i=0;i<n;i++)
        cin>>arr[i];
        Solution obj;
        //calling maxAND() function
        cout <<  obj.maxAND(arr,n)<<endl;
    }
    return 0;
}  